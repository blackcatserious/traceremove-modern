(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3403],{5040:(e,n,a)=>{"use strict";a.d(n,{A:()=>t});let t=(0,a(19946).A)("book-open",[["path",{d:"M12 7v14",key:"1akyts"}],["path",{d:"M3 18a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h5a4 4 0 0 1 4 4 4 4 0 0 1 4-4h5a1 1 0 0 1 1 1v13a1 1 0 0 1-1 1h-6a3 3 0 0 0-3 3 3 3 0 0 0-3-3z",key:"ruj8y"}]])},7369:(e,n,a)=>{"use strict";a.r(n),a.d(n,{default:()=>w});var t=a(95155),s=a(92236),i=a(35169),r=a(14186),c=a(5040),l=a(66516),o=a(43332),d=a(47924),m=a(49376),h=a(71539),p=a(16785),u=a(33109),x=a(6874),_=a.n(x),g=a(73740),y=a(1021),f=a(66476),v=a(79498),b=a(67102),j=a(79805),N=a(21791);function w(){return(0,t.jsxs)("div",{className:"min-h-screen relative",children:[(0,t.jsx)(b.A,{variant:"research"}),(0,t.jsx)(j.A,{variant:"neural",particleCount:110}),(0,t.jsxs)("section",{className:"relative overflow-hidden py-12 sm:py-16",children:[(0,t.jsx)("div",{className:"absolute inset-0 bg-gradient-to-br from-accent-ai-purple/10 to-accent-lab-purple/5"}),(0,t.jsx)("div",{className:"relative max-w-4xl mx-auto px-4 sm:px-6 lg:px-8",children:(0,t.jsxs)(s.P.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.8},children:[(0,t.jsxs)(_(),{href:"/tools",className:"inline-flex items-center text-purple-300 hover:text-white font-medium transition-all duration-300 group",children:[(0,t.jsx)(s.P.div,{whileHover:{x:-4},transition:{duration:.2},children:(0,t.jsx)(i.A,{className:"h-4 w-4 mr-2"})}),(0,t.jsx)("span",{className:"typography-premium",children:"Back to Tools"})]}),(0,t.jsxs)("div",{className:"mb-8",children:[(0,t.jsx)(s.P.h1,{className:"hero-title text-white mb-8 typography-premium",initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:1,delay:.4},children:"Semantic Search Tool: Intelligent Knowledge Discovery Platform"}),(0,t.jsxs)("div",{className:"flex flex-wrap items-center gap-4 text-sm text-research-text-secondary mb-6",children:[(0,t.jsxs)("div",{className:"flex items-center",children:[(0,t.jsx)(r.A,{className:"h-4 w-4 mr-1"}),"Interactive Tool"]}),(0,t.jsxs)("div",{className:"flex items-center",children:[(0,t.jsx)(c.A,{className:"h-4 w-4 mr-1"}),"Status: Production Ready"]}),(0,t.jsx)(N.A,{variant:"ghost",size:"sm",icon:l.A,iconPosition:"left",className:"hover:text-accent-ai-purple transition-colors duration-200",children:"Share Tool"})]}),(0,t.jsx)("div",{className:"flex flex-wrap gap-2 mb-8",children:["Semantic Search","Vector Embeddings","NLP Processing","Contextual Understanding","Multi-modal Search","Personalization"].map(e=>(0,t.jsxs)("span",{className:"inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-accent-ai-purple/10 text-accent-ai-purple border border-accent-ai-purple/20",children:[(0,t.jsx)(o.A,{className:"h-3 w-3 mr-1"}),e]},e))}),(0,t.jsx)(s.P.p,{className:"text-xl text-slate-200 leading-relaxed typography-premium",initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.8,delay:1.6},children:"Advanced semantic search platform that leverages transformer-based embeddings, vector similarity matching, and contextual understanding to deliver highly relevant search results across diverse content types, enabling intelligent knowledge discovery and information retrieval for research and enterprise applications."})]})]})})]}),(0,t.jsx)("section",{className:"py-12",children:(0,t.jsx)("div",{className:"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8",children:(0,t.jsxs)("div",{className:"prose prose-lg max-w-none",children:[(0,t.jsxs)(s.P.div,{initial:{opacity:0,y:20},whileInView:{opacity:1,y:0},transition:{duration:.8},viewport:{once:!0},className:"glass-card-premium p-8 mb-12",children:[(0,t.jsxs)("div",{className:"flex items-center mb-6",children:[(0,t.jsx)(d.A,{className:"h-8 w-8 text-accent-ai-purple mr-3"}),(0,t.jsx)("h2",{className:"section-title text-research-text",children:"Search Tool Overview"})]}),(0,t.jsx)("p",{className:"body-text text-research-text-secondary mb-6",children:"The Semantic Search Tool revolutionizes information retrieval by understanding the meaning and context behind search queries rather than relying solely on keyword matching. It employs state-of-the-art transformer models and vector embeddings to deliver semantically relevant results that match user intent and contextual requirements."}),(0,t.jsx)("p",{className:"body-text text-research-text-secondary",children:"This intelligent platform supports multi-modal search across text, images, and documents, providing personalized results that improve over time through continuous learning and user feedback integration."})]}),(0,t.jsxs)(s.P.div,{initial:{opacity:0,y:20},whileInView:{opacity:1,y:0},transition:{duration:.8},viewport:{once:!0},className:"glass-card-premium p-8 mb-12",children:[(0,t.jsxs)("div",{className:"flex items-center mb-6",children:[(0,t.jsx)(m.A,{className:"h-8 w-8 text-accent-lab-purple mr-3"}),(0,t.jsx)("h2",{className:"section-title text-research-text",children:"Live Search Interface"})]}),(0,t.jsxs)("div",{className:"bg-white/5 rounded-2xl p-6 mb-6 border border-accent-ai-purple/20",children:[(0,t.jsxs)("div",{className:"flex items-center space-x-4 mb-4",children:[(0,t.jsxs)("div",{className:"flex-1 relative",children:[(0,t.jsx)(d.A,{className:"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-accent-ai-purple"}),(0,t.jsx)("input",{type:"text",placeholder:"Search for AI research papers, concepts, or methodologies...",className:"w-full pl-10 pr-4 py-3 bg-white/10 border border-accent-ai-purple/30 rounded-xl text-research-text placeholder-research-text-secondary focus:outline-none focus:border-accent-ai-purple focus:ring-2 focus:ring-accent-ai-purple/20"})]}),(0,t.jsx)(N.A,{variant:"primary",size:"md",className:"hover:shadow-ai-glow",children:"Search"})]}),(0,t.jsx)("div",{className:"flex flex-wrap gap-2",children:["transformer models","neural networks","machine learning ethics","computer vision","natural language processing"].map(e=>(0,t.jsx)("button",{className:"px-3 py-1 text-sm bg-accent-ai-purple/10 text-accent-ai-purple rounded-full border border-accent-ai-purple/20 hover:bg-accent-ai-purple/20 transition-colors duration-200",children:e},e))})]}),(0,t.jsx)(y.A,{animationFile:"semantic-search-demo.json",className:"mx-auto",width:700,height:400}),(0,t.jsx)("div",{className:"mt-6 text-center",children:(0,t.jsx)(N.A,{variant:"primary",size:"lg",icon:h.A,iconPosition:"left",className:"shadow-ai-glow hover:shadow-hero-glow",children:"Try Advanced Search"})})]}),(0,t.jsxs)(s.P.div,{initial:{opacity:0,y:20},whileInView:{opacity:1,y:0},transition:{duration:.8},viewport:{once:!0},className:"glass-card-premium p-8 mb-12",children:[(0,t.jsx)("h2",{className:"section-title text-research-text mb-6",children:"Semantic Search Architecture"}),(0,t.jsx)("p",{className:"body-text text-research-text-secondary mb-8",children:"The semantic search architecture integrates natural language understanding, transformer-based embeddings, and vector similarity matching to deliver intelligent search results. The system emphasizes contextual understanding, multi-modal processing, and personalized relevance ranking for optimal user experience."}),(0,t.jsx)(f.A,{chart:"\ngraph TD\n    A[Semantic Search Tool] --\x3e B[Query Processing]\n    A --\x3e C[Embedding Engine]\n    A --\x3e D[Vector Database]\n    B --\x3e E[Natural Language Understanding]\n    B --\x3e F[Intent Recognition]\n    B --\x3e G[Context Extraction]\n    C --\x3e H[Transformer Models]\n    C --\x3e I[Domain Adaptation]\n    C --\x3e J[Multi-modal Encoding]\n    D --\x3e K[Vector Indexing]\n    D --\x3e L[Similarity Search]\n    D --\x3e M[Result Ranking]\n    E --\x3e N[Semantic Representation]\n    F --\x3e N\n    G --\x3e N\n    H --\x3e O[Dense Embeddings]\n    I --\x3e O\n    J --\x3e O\n    K --\x3e P[Search Infrastructure]\n    L --\x3e P\n    M --\x3e P\n    N --\x3e Q[Query Understanding]\n    O --\x3e Q\n    P --\x3e Q\n    Q --\x3e R[Relevance Matching]\n    R --\x3e S{Results Found?}\n    S --\x3e|Yes| T[Ranked Results]\n    S --\x3e|No| U[Query Expansion]\n    T --\x3e V[Result Presentation]\n    U --\x3e B\n    V --\x3e W[Intelligent Search]\n    \n    style A fill:#3B82F6,stroke:#2563EB,color:#fff\n    style Q fill:#10B981,stroke:#059669,color:#fff\n    style W fill:#8B5CF6,stroke:#7C3AED,color:#fff\n",className:"mb-8"}),(0,t.jsx)("p",{className:"body-text text-research-text-secondary",children:"The system operates through five integrated layers: (1) query processing with NLP understanding and intent recognition, (2) embedding engine with transformer models and domain adaptation, (3) vector database with indexing and similarity search, (4) relevance matching with contextual scoring, and (5) intelligent result presentation with personalized ranking."})]}),(0,t.jsxs)(s.P.div,{initial:{opacity:0,y:20},whileInView:{opacity:1,y:0},transition:{duration:.8},viewport:{once:!0},className:"glass-card-premium p-8 mb-12",children:[(0,t.jsx)("h2",{className:"section-title text-research-text mb-6",children:"Search Performance & Accuracy Metrics"}),(0,t.jsx)("p",{className:"body-text text-research-text-secondary mb-8",children:"Comprehensive performance analysis demonstrating superior search accuracy, relevance scoring, and user satisfaction compared to traditional keyword-based search systems. The semantic approach delivers significantly improved results across diverse query types and content domains."}),(0,t.jsx)(g.A,{dataFile:"semantic_search_performance.json",chartType:"line",title:"Semantic vs Traditional Search Performance Comparison",className:"mb-8"}),(0,t.jsx)("p",{className:"body-text text-research-text-secondary",children:"Results show 85% improvement in search relevance, 70% reduction in query reformulation rates, 92% user satisfaction scores, and 60% faster time-to-relevant-result compared to traditional keyword-based search systems."})]}),(0,t.jsxs)(s.P.div,{initial:{opacity:0,y:20},whileInView:{opacity:1,y:0},transition:{duration:.8},viewport:{once:!0},className:"glass-card-premium p-8 mb-12",children:[(0,t.jsx)("h2",{className:"section-title text-research-text mb-6",children:"Technical Implementation"}),(0,t.jsx)("p",{className:"body-text text-research-text-secondary mb-8",children:"The following implementation demonstrates the comprehensive semantic search system with advanced NLP processing, vector embedding generation, similarity matching algorithms, and personalization features designed to deliver intelligent and contextually relevant search results for diverse applications and user requirements."}),(0,t.jsx)(v.A,{code:"\nclass SemanticSearchTool:\n    def __init__(self, embedding_model, vector_database, search_config):\n        self.embedding_model = embedding_model\n        self.vector_database = vector_database\n        self.search_config = search_config\n        self.query_processor = QueryProcessor()\n        self.relevance_ranker = RelevanceRanker()\n        self.result_enhancer = ResultEnhancer()\n        self.context_manager = ContextManager()\n        \n    def implement_semantic_search_system(self, document_corpus, search_requirements):\n        &quot;&quot;&quot;Implement comprehensive semantic search system with advanced NLP and vector similarity.&quot;&quot;&quot;\n        \n        search_system = {\n            'query_processing': {},\n            'embedding_generation': {},\n            'vector_indexing': {},\n            'similarity_matching': {},\n            'result_ranking': {}\n        }\n        \n        # Advanced query processing\n        search_system['query_processing'] = self.build_query_processing(\n            search_requirements, self.search_config,\n            processing_components=[\n                'natural_language_understanding',\n                'intent_classification_system',\n                'entity_recognition_extraction',\n                'context_aware_parsing',\n                'query_expansion_mechanisms',\n                'semantic_disambiguation'\n            ]\n        )\n        \n        # Multi-modal embedding generation\n        search_system['embedding_generation'] = self.implement_embedding_generation(\n            search_system['query_processing'], document_corpus,\n            embedding_capabilities=[\n                'transformer_based_encoders',\n                'domain_specific_fine_tuning',\n                'multi_modal_representation',\n                'contextual_embedding_adaptation',\n                'cross_lingual_understanding',\n                'temporal_embedding_evolution'\n            ]\n        )\n        \n        # Scalable vector indexing\n        search_system['vector_indexing'] = self.build_vector_indexing(\n            search_system['embedding_generation'],\n            indexing_strategies=[\n                'approximate_nearest_neighbor',\n                'hierarchical_clustering_index',\n                'locality_sensitive_hashing',\n                'graph_based_indexing',\n                'distributed_vector_storage',\n                'real_time_index_updates'\n            ]\n        )\n        \n        # Intelligent similarity matching\n        search_system['similarity_matching'] = self.implement_similarity_matching(\n            search_system['vector_indexing'],\n            matching_algorithms=[\n                'cosine_similarity_computation',\n                'euclidean_distance_metrics',\n                'learned_similarity_functions',\n                'contextual_relevance_scoring',\n                'multi_criteria_matching',\n                'adaptive_threshold_adjustment'\n            ]\n        )\n        \n        return search_system\n    \n    def execute_semantic_search(self, search_query, search_context, result_preferences):\n        &quot;&quot;&quot;Execute comprehensive semantic search with contextual understanding and personalization.&quot;&quot;&quot;\n        \n        search_process = {\n            'query_analysis': {},\n            'embedding_computation': {},\n            'vector_retrieval': {},\n            'relevance_assessment': {},\n            'result_enhancement': {}\n        }\n        \n        # Deep query analysis\n        search_process['query_analysis'] = self.analyze_search_query(\n            search_query, search_context,\n            analysis_dimensions=[\n                'semantic_intent_extraction',\n                'conceptual_relationship_mapping',\n                'domain_context_identification',\n                'user_preference_integration',\n                'temporal_relevance_assessment',\n                'complexity_level_determination'\n            ]\n        )\n        \n        # Contextual embedding computation\n        search_process['embedding_computation'] = self.compute_contextual_embeddings(\n            search_process['query_analysis'], result_preferences,\n            computation_strategies=[\n                'query_specific_encoding',\n                'context_aware_representation',\n                'user_profile_integration',\n                'domain_knowledge_injection',\n                'multi_granularity_encoding',\n                'dynamic_embedding_adaptation'\n            ]\n        )\n        \n        # Efficient vector retrieval\n        search_process['vector_retrieval'] = self.retrieve_candidate_vectors(\n            search_process['embedding_computation'],\n            retrieval_mechanisms=[\n                'approximate_similarity_search',\n                'multi_stage_filtering',\n                'candidate_set_expansion',\n                'diversity_aware_selection',\n                'performance_optimized_retrieval',\n                'scalable_search_execution'\n            ]\n        )\n        \n        # Advanced relevance assessment\n        search_process['relevance_assessment'] = self.assess_result_relevance(\n            search_process['vector_retrieval'], search_context,\n            assessment_criteria=[\n                'semantic_similarity_scoring',\n                'contextual_relevance_evaluation',\n                'user_intent_alignment',\n                'content_quality_assessment',\n                'freshness_and_authority_scoring',\n                'personalization_factor_integration'\n            ]\n        )\n        \n        return search_process\n    \n    def implement_advanced_features(self, search_system, feature_requirements, user_feedback):\n        &quot;&quot;&quot;Implement advanced semantic search features including personalization and learning.&quot;&quot;&quot;\n        \n        advanced_features = {\n            'personalization_engine': {},\n            'learning_system': {},\n            'multi_modal_search': {},\n            'collaborative_filtering': {},\n            'explainable_results': {}\n        }\n        \n        # Intelligent personalization engine\n        advanced_features['personalization_engine'] = self.build_personalization_engine(\n            search_system, feature_requirements,\n            personalization_components=[\n                'user_behavior_modeling',\n                'preference_learning_algorithms',\n                'contextual_adaptation_mechanisms',\n                'search_history_integration',\n                'collaborative_preference_inference',\n                'dynamic_profile_updating'\n            ]\n        )\n        \n        # Continuous learning system\n        advanced_features['learning_system'] = self.implement_learning_system(\n            advanced_features['personalization_engine'], user_feedback,\n            learning_mechanisms=[\n                'relevance_feedback_integration',\n                'click_through_rate_optimization',\n                'query_reformulation_learning',\n                'result_quality_improvement',\n                'user_satisfaction_modeling',\n                'adaptive_ranking_refinement'\n            ]\n        )\n        \n        # Multi-modal search capabilities\n        advanced_features['multi_modal_search'] = self.build_multi_modal_search(\n            advanced_features,\n            modal_capabilities=[\n                'text_and_image_search',\n                'audio_content_retrieval',\n                'video_semantic_search',\n                'document_structure_understanding',\n                'cross_modal_similarity_matching',\n                'unified_representation_learning'\n            ]\n        )\n        \n        # Collaborative filtering integration\n        advanced_features['collaborative_filtering'] = self.implement_collaborative_filtering(\n            advanced_features, user_feedback,\n            filtering_approaches=[\n                'user_similarity_computation',\n                'item_based_recommendations',\n                'matrix_factorization_techniques',\n                'deep_collaborative_models',\n                'hybrid_recommendation_systems',\n                'social_network_integration'\n            ]\n        )\n        \n        return advanced_features\n    \n    def evaluate_search_performance(self, search_system, evaluation_metrics, test_queries):\n        &quot;&quot;&quot;Evaluate semantic search performance across multiple dimensions and use cases.&quot;&quot;&quot;\n        \n        performance_evaluation = {\n            'relevance_metrics': {},\n            'efficiency_analysis': {},\n            'user_satisfaction': {},\n            'system_scalability': {},\n            'comparative_analysis': {}\n        }\n        \n        # Comprehensive relevance metrics\n        performance_evaluation['relevance_metrics'] = self.measure_relevance_performance(\n            search_system, evaluation_metrics,\n            relevance_dimensions=[\n                'precision_and_recall_analysis',\n                'mean_average_precision',\n                'normalized_discounted_cumulative_gain',\n                'semantic_similarity_correlation',\n                'user_intent_fulfillment_rate',\n                'contextual_relevance_accuracy'\n            ]\n        )\n        \n        # System efficiency analysis\n        performance_evaluation['efficiency_analysis'] = self.analyze_system_efficiency(\n            performance_evaluation['relevance_metrics'], test_queries,\n            efficiency_metrics=[\n                'query_processing_latency',\n                'embedding_computation_time',\n                'vector_search_performance',\n                'result_ranking_efficiency',\n                'memory_usage_optimization',\n                'throughput_scalability_analysis'\n            ]\n        )\n        \n        # User satisfaction assessment\n        performance_evaluation['user_satisfaction'] = self.assess_user_satisfaction(\n            performance_evaluation,\n            satisfaction_indicators=[\n                'search_success_rate',\n                'user_engagement_metrics',\n                'query_reformulation_frequency',\n                'result_click_through_rates',\n                'session_completion_analysis',\n                'long_term_usage_patterns'\n            ]\n        )\n        \n        return performance_evaluation\n",language:"python",className:"mb-8"}),(0,t.jsx)("p",{className:"body-text text-research-text-secondary",children:"The search framework provides systematic approaches to semantic understanding that enable applications to deliver highly relevant results, improve user satisfaction, and adapt to evolving information needs through continuous learning and optimization."})]}),(0,t.jsxs)(s.P.div,{initial:{opacity:0,y:20},whileInView:{opacity:1,y:0},transition:{duration:.8},viewport:{once:!0},className:"glass-card-premium p-8 mb-12",children:[(0,t.jsxs)("div",{className:"flex items-center mb-6",children:[(0,t.jsx)(p.A,{className:"h-8 w-8 text-accent-ai-purple mr-3"}),(0,t.jsx)("h2",{className:"section-title text-research-text",children:"Advanced Search Features"})]}),(0,t.jsxs)("div",{className:"grid md:grid-cols-2 gap-6",children:[(0,t.jsxs)("div",{className:"expertise-card p-6",children:[(0,t.jsx)("h3",{className:"text-lg font-semibold text-research-text mb-3",children:"Contextual Understanding"}),(0,t.jsx)("p",{className:"body-text text-research-text-secondary",children:"Deep semantic analysis that understands query intent, context, and conceptual relationships."})]}),(0,t.jsxs)("div",{className:"expertise-card p-6",children:[(0,t.jsx)("h3",{className:"text-lg font-semibold text-research-text mb-3",children:"Multi-Modal Search"}),(0,t.jsx)("p",{className:"body-text text-research-text-secondary",children:"Search across text, images, documents, and multimedia content with unified relevance scoring."})]}),(0,t.jsxs)("div",{className:"expertise-card p-6",children:[(0,t.jsx)("h3",{className:"text-lg font-semibold text-research-text mb-3",children:"Personalized Results"}),(0,t.jsx)("p",{className:"body-text text-research-text-secondary",children:"Adaptive ranking based on user preferences, search history, and behavioral patterns."})]}),(0,t.jsxs)("div",{className:"expertise-card p-6",children:[(0,t.jsx)("h3",{className:"text-lg font-semibold text-research-text mb-3",children:"Real-Time Learning"}),(0,t.jsx)("p",{className:"body-text text-research-text-secondary",children:"Continuous improvement through user feedback integration and relevance optimization."})]})]})]}),(0,t.jsxs)(s.P.div,{initial:{opacity:0,y:20},whileInView:{opacity:1,y:0},transition:{duration:.8},viewport:{once:!0},className:"glass-card-premium p-8 mb-12",children:[(0,t.jsx)("h2",{className:"section-title text-research-text mb-6",children:"Applications & Use Cases"}),(0,t.jsxs)("div",{className:"space-y-6",children:[(0,t.jsxs)("div",{className:"border-l-4 border-blue-500 pl-6",children:[(0,t.jsx)("h3",{className:"text-lg font-semibold text-research-text mb-2",children:"Academic Research Discovery"}),(0,t.jsx)("p",{className:"body-text text-research-text-secondary",children:"Researchers use semantic search to discover relevant papers, identify research gaps, find collaboration opportunities, and explore interdisciplinary connections across vast academic databases and publication repositories."})]}),(0,t.jsxs)("div",{className:"border-l-4 border-green-500 pl-6",children:[(0,t.jsx)("h3",{className:"text-lg font-semibold text-research-text mb-2",children:"Enterprise Knowledge Management"}),(0,t.jsx)("p",{className:"body-text text-research-text-secondary",children:"Organizations leverage semantic search for internal knowledge bases, document repositories, and expertise location, enabling employees to quickly find relevant information, best practices, and subject matter experts."})]}),(0,t.jsxs)("div",{className:"border-l-4 border-purple-500 pl-6",children:[(0,t.jsx)("h3",{className:"text-lg font-semibold text-research-text mb-2",children:"E-commerce & Content Platforms"}),(0,t.jsx)("p",{className:"body-text text-research-text-secondary",children:"Digital platforms implement semantic search to improve product discovery, content recommendation, and user experience by understanding customer intent and delivering contextually relevant results that drive engagement and conversion."})]})]})]}),(0,t.jsxs)(s.P.div,{initial:{opacity:0,y:20},whileInView:{opacity:1,y:0},transition:{duration:.8},viewport:{once:!0},className:"glass-card-premium p-8 mb-12",children:[(0,t.jsx)("h2",{className:"section-title text-research-text mb-6",children:"Technical Innovations"}),(0,t.jsxs)("div",{className:"grid md:grid-cols-3 gap-6",children:[(0,t.jsxs)("div",{className:"academic-card p-6",children:[(0,t.jsx)("h3",{className:"text-lg font-semibold text-research-text mb-3",children:"Hybrid Embeddings"}),(0,t.jsx)("p",{className:"body-text text-research-text-secondary text-sm",children:"Combination of dense and sparse embeddings for optimal semantic and lexical matching."})]}),(0,t.jsxs)("div",{className:"academic-card p-6",children:[(0,t.jsx)("h3",{className:"text-lg font-semibold text-research-text mb-3",children:"Dynamic Reranking"}),(0,t.jsx)("p",{className:"body-text text-research-text-secondary text-sm",children:"Context-aware result reranking based on user interaction patterns and feedback signals."})]}),(0,t.jsxs)("div",{className:"academic-card p-6",children:[(0,t.jsx)("h3",{className:"text-lg font-semibold text-research-text mb-3",children:"Cross-Modal Fusion"}),(0,t.jsx)("p",{className:"body-text text-research-text-secondary text-sm",children:"Advanced techniques for combining text, image, and structured data representations."})]})]})]}),(0,t.jsxs)(s.P.div,{initial:{opacity:0,y:20},whileInView:{opacity:1,y:0},transition:{duration:.8},viewport:{once:!0},className:"glass-card-premium p-8 mb-12",children:[(0,t.jsxs)("div",{className:"flex items-center mb-6",children:[(0,t.jsx)(h.A,{className:"h-8 w-8 text-accent-ai-purple mr-3"}),(0,t.jsx)("h2",{className:"section-title text-research-text",children:"Getting Started"})]}),(0,t.jsxs)("div",{className:"space-y-4",children:[(0,t.jsxs)("div",{className:"flex items-start space-x-4",children:[(0,t.jsx)("div",{className:"flex-shrink-0 w-8 h-8 bg-accent-ai-purple text-white rounded-full flex items-center justify-center text-sm font-semibold",children:"1"}),(0,t.jsxs)("div",{children:[(0,t.jsx)("h3",{className:"text-lg font-semibold text-research-text mb-2",children:"Index Your Content"}),(0,t.jsx)("p",{className:"body-text text-research-text-secondary",children:"Upload and process your documents, research papers, or content corpus for semantic indexing."})]})]}),(0,t.jsxs)("div",{className:"flex items-start space-x-4",children:[(0,t.jsx)("div",{className:"flex-shrink-0 w-8 h-8 bg-accent-ai-purple text-white rounded-full flex items-center justify-center text-sm font-semibold",children:"2"}),(0,t.jsxs)("div",{children:[(0,t.jsx)("h3",{className:"text-lg font-semibold text-research-text mb-2",children:"Configure Search Parameters"}),(0,t.jsx)("p",{className:"body-text text-research-text-secondary",children:"Set up domain-specific embeddings, relevance thresholds, and personalization preferences."})]})]}),(0,t.jsxs)("div",{className:"flex items-start space-x-4",children:[(0,t.jsx)("div",{className:"flex-shrink-0 w-8 h-8 bg-accent-ai-purple text-white rounded-full flex items-center justify-center text-sm font-semibold",children:"3"}),(0,t.jsxs)("div",{children:[(0,t.jsx)("h3",{className:"text-lg font-semibold text-research-text mb-2",children:"Start Searching"}),(0,t.jsx)("p",{className:"body-text text-research-text-secondary",children:"Begin with natural language queries and explore the intelligent, contextually relevant results."})]})]})]})]}),(0,t.jsx)(s.P.div,{initial:{opacity:0,y:20},whileInView:{opacity:1,y:0},transition:{duration:.8},viewport:{once:!0},className:"border-t border-accent-ai-purple/20 pt-8",children:(0,t.jsxs)("div",{className:"flex justify-between items-center",children:[(0,t.jsxs)(_(),{href:"/tools/ai-research-dashboard",className:"inline-flex items-center px-6 py-3 bg-white/10 text-research-text font-medium rounded-2xl border border-accent-ai-purple/20 hover:border-accent-ai-purple/40 backdrop-blur-sm transition-all duration-300",children:[(0,t.jsx)(i.A,{className:"h-4 w-4 mr-2"}),"Previous Tool"]}),(0,t.jsxs)(_(),{href:"/tools/privacy-score-calculator",className:"inline-flex items-center px-6 py-3 bg-gradient-to-r from-accent-ai-purple to-accent-lab-purple text-white font-medium rounded-2xl shadow-ai-glow hover:shadow-hero-glow transition-all duration-300",children:["Next Tool",(0,t.jsx)(u.A,{className:"h-4 w-4 ml-2"})]})]})})]})})})]})}},14186:(e,n,a)=>{"use strict";a.d(n,{A:()=>t});let t=(0,a(19946).A)("clock",[["path",{d:"M12 6v6l4 2",key:"mmk7yg"}],["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}]])},16785:(e,n,a)=>{"use strict";a.d(n,{A:()=>t});let t=(0,a(19946).A)("target",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["circle",{cx:"12",cy:"12",r:"6",key:"1vlfrh"}],["circle",{cx:"12",cy:"12",r:"2",key:"1c9p78"}]])},19335:(e,n,a)=>{Promise.resolve().then(a.bind(a,7369))},33109:(e,n,a)=>{"use strict";a.d(n,{A:()=>t});let t=(0,a(19946).A)("trending-up",[["path",{d:"M16 7h6v6",key:"box55l"}],["path",{d:"m22 7-8.5 8.5-5-5L2 17",key:"1t1m79"}]])},43332:(e,n,a)=>{"use strict";a.d(n,{A:()=>t});let t=(0,a(19946).A)("tag",[["path",{d:"M12.586 2.586A2 2 0 0 0 11.172 2H4a2 2 0 0 0-2 2v7.172a2 2 0 0 0 .586 1.414l8.704 8.704a2.426 2.426 0 0 0 3.42 0l6.58-6.58a2.426 2.426 0 0 0 0-3.42z",key:"vktsd0"}],["circle",{cx:"7.5",cy:"7.5",r:".5",fill:"currentColor",key:"kqv944"}]])},47924:(e,n,a)=>{"use strict";a.d(n,{A:()=>t});let t=(0,a(19946).A)("search",[["path",{d:"m21 21-4.34-4.34",key:"14j7rj"}],["circle",{cx:"11",cy:"11",r:"8",key:"4ej97u"}]])},49376:(e,n,a)=>{"use strict";a.d(n,{A:()=>t});let t=(0,a(19946).A)("brain",[["path",{d:"M12 18V5",key:"adv99a"}],["path",{d:"M15 13a4.17 4.17 0 0 1-3-4 4.17 4.17 0 0 1-3 4",key:"1e3is1"}],["path",{d:"M17.598 6.5A3 3 0 1 0 12 5a3 3 0 1 0-5.598 1.5",key:"1gqd8o"}],["path",{d:"M17.997 5.125a4 4 0 0 1 2.526 5.77",key:"iwvgf7"}],["path",{d:"M18 18a4 4 0 0 0 2-7.464",key:"efp6ie"}],["path",{d:"M19.967 17.483A4 4 0 1 1 12 18a4 4 0 1 1-7.967-.517",key:"1gq6am"}],["path",{d:"M6 18a4 4 0 0 1-2-7.464",key:"k1g0md"}],["path",{d:"M6.003 5.125a4 4 0 0 0-2.526 5.77",key:"q97ue3"}]])},66516:(e,n,a)=>{"use strict";a.d(n,{A:()=>t});let t=(0,a(19946).A)("share-2",[["circle",{cx:"18",cy:"5",r:"3",key:"gq8acd"}],["circle",{cx:"6",cy:"12",r:"3",key:"w7nqdw"}],["circle",{cx:"18",cy:"19",r:"3",key:"1xt0gg"}],["line",{x1:"8.59",x2:"15.42",y1:"13.51",y2:"17.49",key:"47mynk"}],["line",{x1:"15.41",x2:"8.59",y1:"6.51",y2:"10.49",key:"1n3mei"}]])},71539:(e,n,a)=>{"use strict";a.d(n,{A:()=>t});let t=(0,a(19946).A)("zap",[["path",{d:"M4 14a1 1 0 0 1-.78-1.63l9.9-10.2a.5.5 0 0 1 .86.46l-1.92 6.02A1 1 0 0 0 13 10h7a1 1 0 0 1 .78 1.63l-9.9 10.2a.5.5 0 0 1-.86-.46l1.92-6.02A1 1 0 0 0 11 14z",key:"1xq2db"}]])}},e=>{e.O(0,[9066,2018,5647,5525,6874,272,8579,2027,8096,420,8441,5964,7358],()=>e(e.s=19335)),_N_E=e.O()}]);